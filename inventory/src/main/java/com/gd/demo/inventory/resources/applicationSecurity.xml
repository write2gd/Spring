<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
	http://www.springframework.org/schema/security
	http://www.springframework.org/schema/security/spring-security-3.2.xsd">
	
	<global-method-security pre-post-annotations="enabled"/>
    <http entry-point-ref="gdProcessingFilterEntryPoint" >
    	
    	  <intercept-url pattern="/secure/extreme/**" access="ROLE_SUPERVISOR" requires-channel="https"/>
         <intercept-url pattern="/admin/**"  access="ROLE_ADMIN" />
           <intercept-url pattern="/spring/**"  access="ROLE_USER,ROLE_ADMIN,ROLE_SUPERVISOR" />
         <intercept-url pattern="/*source/**" access="ROLE_SUPERVISOR"/>          
         <logout logout-url="/j_spring_security_logout"  logout-success-url="https://illusionist:8443/BCASAuthMgr/logout?service=https://illusionist:7002/inventMgr" invalidate-session="true"/>         
       <session-management>
            <concurrency-control  max-sessions="1" error-if-maximum-exceeded="true"  expired-url="/timeout"  />            
        </session-management>
        <custom-filter ref="gdAuthenticationFilter" after="CAS_FILTER"/>  
        <access-denied-handler error-page="/denied" />     
    </http>
    
     <authentication-manager alias="authenticationManager">
        <authentication-provider ref="gdAuthenticationProvider"/>
    </authentication-manager>

 <beans:bean id="gdAuthenticationFilter" class="org.springframework.security.cas.web.CasAuthenticationFilter">
        <beans:property name="authenticationManager" ref="authenticationManager"/>
        
        <beans:property name="authenticationFailureHandler">
            <beans:bean class="org.springframework.security.web.authentication.SimpleUrlAuthenticationFailureHandler">
                <beans:property name="defaultFailureUrl" value="https://illusionist:8443/BCASAuthMgr/login"/>
            </beans:bean>
        </beans:property>
        <beans:property name="authenticationSuccessHandler">
            <beans:bean class="org.springframework.security.web.authentication.SimpleUrlAuthenticationSuccessHandler">
                <beans:property name="defaultTargetUrl" value="/spring/home"/>
            </beans:bean>
        </beans:property>
        
        <beans:property name="proxyGrantingTicketStorage" ref="proxyGrantingTicketStorage" />
        <beans:property name="proxyReceptorUrl" value="/secure/receptor" />
    </beans:bean>

 <beans:bean id="gdProcessingFilterEntryPoint" class="org.springframework.security.cas.web.CasAuthenticationEntryPoint">
        <beans:property name="loginUrl" value="https://illusionist:8443/BCASAuthMgr/login"/>
        <beans:property name="serviceProperties" ref="serviceProperties"/>
    </beans:bean>

<beans:bean id="gdAuthenticationProvider" class="org.springframework.security.cas.authentication.CasAuthenticationProvider">
        <beans:property name="userDetailsService" ref="gdDaoAuthenticationService"/>
        <beans:property name="serviceProperties" ref="serviceProperties" />
        <beans:property name="ticketValidator">
            <beans:bean class="org.jasig.cas.client.validation.Cas20ServiceTicketValidator">
                <beans:constructor-arg index="0" value="https://illusionist:8443/BCASAuthMgr" />
                <beans:property name="proxyGrantingTicketStorage" ref="proxyGrantingTicketStorage" />
                <beans:property name="proxyCallbackUrl" value="https://illusionist:7002/inventMgr/secure/receptor" />
            </beans:bean>
        </beans:property>
        <beans:property name="key" value="bcasgd"/>
    </beans:bean>

 <beans:bean id="proxyGrantingTicketStorage" class="org.jasig.cas.client.proxy.ProxyGrantingTicketStorageImpl" />

<beans:bean id="serviceProperties" class="org.springframework.security.cas.ServiceProperties">
        <beans:property name="service" value="https://illusionist:7002/inventMgr/j_spring_cas_security_check"/>
        <beans:property name="sendRenew" value="false"/>
    </beans:bean>

<!-- 
<authentication-manager>
	  <authentication-provider user-service-ref="gdDaoAuthenticationService" >
			  <password-encoder  hash="sha-256"></password-encoder>    
		</authentication-provider>  
		 <ldap-authentication-provider user-search-base="ou=People" user-search-filter="(uid={0})" group-search-filter="member={0}" group-search-base="ou=Groups" server-ref="openldap" > 
		 <password-compare>
		 <password-encoder hash="md5"/>
		 </password-compare>
		 </ldap-authentication-provider> 
	  <authentication-provider ref="gdbcasldapservice"></authentication-provider>
	</authentication-manager>
	
	 -->
	
    
 <ldap-server id="openldap" url="ldap://illusionist:389/dc=gd,dc=india" /> 
 <beans:bean id="contextSource" class="org.springframework.security.ldap.DefaultSpringSecurityContextSource">
<beans:constructor-arg value="ldap://illusionist:389/dc=gd,dc=india"/>
</beans:bean>	

 <beans:bean id="gdbcasldapservice" class="org.springframework.security.ldap.authentication.LdapAuthenticationProvider">
 
 <beans:constructor-arg>
 <beans:bean class="org.springframework.security.ldap.authentication.BindAuthenticator">
		  <beans:constructor-arg ref="contextSource" />
		 <!--   <beans:property name="passwordEncoder">
                <beans:bean class="org.springframework.security.authentication.encoding.Md5PasswordEncoder" />
            </beans:property> -->
		   <beans:property name="userSearch">
		   <beans:bean id="userSearch" class="org.springframework.security.ldap.search.FilterBasedLdapUserSearch">
		   <beans:constructor-arg index="0" value="ou=People"/>
		   <beans:constructor-arg index="1" value="(uid={0})"/>
		   <beans:constructor-arg index="2" ref="contextSource" />
		   </beans:bean>
		   </beans:property>
 </beans:bean>
 </beans:constructor-arg>


 </beans:bean>
 
 




</beans:beans>
